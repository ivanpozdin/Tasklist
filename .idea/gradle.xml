<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="GradleMigrationSettings" migrationVersion="1" />
  <component name="GradleSettings">
    <option name="linkedExternalProjectsSettings">
      <GradleProjectSettings>
        <option name="delegatedBuild" value="true" />
        <option name="testRunner" value="GRADLE" />
        <option name="distributionType" value="WRAPPED" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="modules">
          <set>
            <option value="$PROJECT_DIR$" />
            <option value="$PROJECT_DIR$/Tasklist/task" />
            <option value="$PROJECT_DIR$/Tasklist/task/build/classes/kotlin" />
            <option value="$PROJECT_DIR$/Tasklist/task/build/reports/tests" />
            <option value="$PROJECT_DIR$/Tasklist/task/build/test-results" />
            <option value="$PROJECT_DIR$/Tasklist/task/build/tmp" />
            <option value="$PROJECT_DIR$/Tasklist/task/out" />
            <option value="$PROJECT_DIR$/Topics/Arrays/Initializing an array" />
            <option value="$PROJECT_DIR$/Topics/Arrays/Swap elements" />
            <option value="$PROJECT_DIR$/Topics/Arrays/Theory" />
            <option value="$PROJECT_DIR$/Topics/Functions as objects/Function composition" />
            <option value="$PROJECT_DIR$/Topics/Functions as objects/Function generator" />
            <option value="$PROJECT_DIR$/Topics/Functions as objects/Kotlin function type" />
            <option value="$PROJECT_DIR$/Topics/Functions as objects/Reference to a top" />
            <option value="$PROJECT_DIR$/Topics/Functions as objects/Theory" />
            <option value="$PROJECT_DIR$/Topics/Jumps and returns/Beyond the word" />
            <option value="$PROJECT_DIR$/Topics/Jumps and returns/Getting letters from the Alphabet" />
            <option value="$PROJECT_DIR$/Topics/Jumps and returns/Jumping out" />
            <option value="$PROJECT_DIR$/Topics/Jumps and returns/Placement of ships" />
            <option value="$PROJECT_DIR$/Topics/Jumps and returns/Theory" />
            <option value="$PROJECT_DIR$/Topics/Jumps and returns/Whole truth about continue" />
            <option value="$PROJECT_DIR$/Topics/Kotlinx datetime library/Days until" />
            <option value="$PROJECT_DIR$/Topics/Kotlinx datetime library/Leap Year" />
            <option value="$PROJECT_DIR$/Topics/Kotlinx datetime library/Next Month" />
            <option value="$PROJECT_DIR$/Topics/Kotlinx datetime library/Subtracting Instant Objects" />
            <option value="$PROJECT_DIR$/Topics/Kotlinx datetime library/Theory" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Range multiplication" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Syntactic sugar" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Syntax" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Theory" />
            <option value="$PROJECT_DIR$/Topics/Property accessors/City population" />
            <option value="$PROJECT_DIR$/Topics/Property accessors/Implement a class" />
            <option value="$PROJECT_DIR$/Topics/Property accessors/Theory" />
            <option value="$PROJECT_DIR$/Topics/Secondary constructor/Barista problem" />
            <option value="$PROJECT_DIR$/Topics/Secondary constructor/Fabric manufacture" />
            <option value="$PROJECT_DIR$/Topics/Secondary constructor/Frozen desserts" />
            <option value="$PROJECT_DIR$/Topics/Secondary constructor/Theory" />
            <option value="$PROJECT_DIR$/Topics/Secondary constructor/Validation" />
            <option value="$PROJECT_DIR$/Topics/Taming exceptions/A winning car" />
            <option value="$PROJECT_DIR$/Topics/Taming exceptions/Exception into a variable" />
            <option value="$PROJECT_DIR$/Topics/Taming exceptions/Handle number format exception" />
            <option value="$PROJECT_DIR$/Topics/Taming exceptions/Theory" />
            <option value="$PROJECT_DIR$/Topics/The try-catch statement/Converter to Double" />
            <option value="$PROJECT_DIR$/Topics/The try-catch statement/Handling strings" />
            <option value="$PROJECT_DIR$/Topics/The try-catch statement/Integer division" />
            <option value="$PROJECT_DIR$/Topics/The try-catch statement/Theory" />
            <option value="$PROJECT_DIR$/Topics/The try-catch-finally statement/Complex handling" />
            <option value="$PROJECT_DIR$/Topics/The try-catch-finally statement/Parting words" />
            <option value="$PROJECT_DIR$/Topics/The try-catch-finally statement/The Answer is" />
            <option value="$PROJECT_DIR$/Topics/The try-catch-finally statement/Theory" />
            <option value="$PROJECT_DIR$/Topics/The try-catch-finally statement/Will it be printed" />
            <option value="$PROJECT_DIR$/Topics/Type system/Reverse me if you can" />
            <option value="$PROJECT_DIR$/Topics/Type system/String or Int" />
            <option value="$PROJECT_DIR$/Topics/Type system/Theory" />
            <option value="$PROJECT_DIR$/Topics/Writing files/Closed case" />
            <option value="$PROJECT_DIR$/Topics/Writing files/Duplication" />
            <option value="$PROJECT_DIR$/Topics/Writing files/Theory" />
            <option value="$PROJECT_DIR$/Topics/Writing files/writeText()" />
            <option value="$PROJECT_DIR$/Topics/toString()/Latte" />
            <option value="$PROJECT_DIR$/Topics/toString()/Tea" />
            <option value="$PROJECT_DIR$/Topics/toString()/Theory" />
            <option value="$PROJECT_DIR$/Topics/toString()/toString() types" />
            <option value="$PROJECT_DIR$/util" />
          </set>
        </option>
      </GradleProjectSettings>
    </option>
  </component>
</project>